{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const error = meta.error ? \"field\" : \"field error\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      })), this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ui error message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, error, \" \"));\n    }\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a valid title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a valid description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["D:/react/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Component","Field","reduxForm","StreamCreate","renderInput","input","label","meta","error","renderError","touched","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAanCI,WAbmC,GAavB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAeC,MAAAA;AAAf,KAAD,KAAyB;AACnC,YAAMC,KAAK,GAACD,IAAI,CAACC,KAAL,GAAW,OAAX,GAAmB,aAA/B;AACA,0BACE;AAAK,QAAA,SAAS,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADF,eAEE,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGG,KAAKI,WAAL,CAAiBF,IAAjB,CAHH,CADF;AAOD,KAtBkC;AAAA;;AAErCE,EAAAA,WAAW,CAAC;AAACD,IAAAA,KAAD;AAAOE,IAAAA;AAAP,GAAD,EAAiB;AAE1B,QAAIA,OAAO,IAAIF,KAAf,EAAqB;AACnB,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,KAAzB,MADF,CADF;AAKD;AACF;;AAaCG,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAED;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKP,WAApC;AAAiD,MAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAE,KAAKA,WAFlB;AAGE,MAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE;AACA,MAAA,SAAS,EAAC,mBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF;AAcD;;AA5CkC;;AA+CrC,MAAMc,QAAQ,GAAEN,UAAD,IAAc;AAE3B,QAAMO,MAAM,GAAC,EAAb;;AAEA,MAAG,CAACP,UAAU,CAACQ,KAAf,EAAqB;AAEnBD,IAAAA,MAAM,CAACC,KAAP,GAAa,8BAAb;AACD;;AACD,MAAG,CAACR,UAAU,CAACS,WAAf,EAA2B;AAEzBF,IAAAA,MAAM,CAACE,WAAP,GAAmB,oCAAnB;AACD;;AACD,SAAOF,MAAP;AACD,CAbD;;AAeA,eAAejB,SAAS,CAAC;AACvBoB,EAAAA,IAAI,EAAE,cADiB;AAEvBJ,EAAAA,QAAQ,EAAEA;AAFa,CAAD,CAAT,CAGZf,YAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass StreamCreate extends Component {\r\n\r\nrenderError({error,touched}){\r\n\r\n  if (touched && error){\r\n    return(\r\n      <div className=\"ui error message\">\r\n        <div className=\"header\">{error} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  renderInput=({ input, label,meta })=>{\r\n    const error=meta.error?\"field\":\"field error\"\r\n    return (\r\n      <div className={error}>\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\"/>\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit(formValues) {\r\n    console.log(formValues);\r\n\r\n  }\r\n   \r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n        <Field name=\"title\" component={this.renderInput} label=\"Title\" />\r\n        <Field\r\n          name=\"description\"\r\n          component={this.renderInput}\r\n          label=\"Description\"\r\n        />\r\n        <button \r\n        className=\"ui button primary\">Submit</button>\r\n  \r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst validate=(formValues)=>{\r\n\r\n  const errors={};\r\n\r\n  if(!formValues.title){\r\n\r\n    errors.title=\"You must enter a valid title\";\r\n  }\r\n  if(!formValues.description){\r\n\r\n    errors.description=\"You must enter a valid description\";\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"streamCreate\",\r\n  validate: validate\r\n})(StreamCreate);\r\n"]},"metadata":{},"sourceType":"module"}