{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends Component {\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }\n      }, error, \" \");\n    }\n\n    return null;\n  }\n\n  renderInput({\n    input,\n    label,\n    meta\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    })), this.renderError(meta));\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a valid title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a valid description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["D:/react/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Component","Field","reduxForm","StreamCreate","renderError","error","touched","renderInput","input","label","meta","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAErCI,EAAAA,WAAW,CAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,EAAiB;AAE1B,QAAIA,OAAO,IAAID,KAAf,EAAqB;AACnB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAN,MADF;AAGD;;AACD,WAAO,IAAP;AAED;;AAECE,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,GAAD,EAAwB;AACjC,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAR,CADF,eAEE,+CAAWD,KAAX;AAAkB,MAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,EAGG,KAAKJ,WAAL,CAAiBM,IAAjB,CAHH,CADF;AAOD;;AAEDC,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAED;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKJ,WAApC;AAAiD,MAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAE,KAAKA,WAFlB;AAGE,MAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF;AAaD;;AA1CkC;;AA6CrC,MAAMW,QAAQ,GAAEN,UAAD,IAAc;AAE3B,QAAMO,MAAM,GAAC,EAAb;;AAEA,MAAG,CAACP,UAAU,CAACQ,KAAf,EAAqB;AAEnBD,IAAAA,MAAM,CAACC,KAAP,GAAa,8BAAb;AACD;;AACD,MAAG,CAACR,UAAU,CAACS,WAAf,EAA2B;AAEzBF,IAAAA,MAAM,CAACE,WAAP,GAAmB,oCAAnB;AACD;;AACD,SAAOF,MAAP;AACD,CAbD;;AAeA,eAAejB,SAAS,CAAC;AACvBoB,EAAAA,IAAI,EAAE,cADiB;AAEvBJ,EAAAA,QAAQ,EAAEA;AAFa,CAAD,CAAT,CAGZf,YAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass StreamCreate extends Component {\r\n\r\nrenderError({error,touched}){\r\n\r\n  if (touched && error){\r\n    return(\r\n      <div>{error} </div>\r\n    )\r\n  }\r\n  return null\r\n\r\n}\r\n\r\n  renderInput({ input, label,meta }) {\r\n    return (\r\n      <div className=\"filed\">\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\"/>\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit(formValues) {\r\n    console.log(formValues);\r\n\r\n  }\r\n   \r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n        <Field name=\"title\" component={this.renderInput} label=\"Title\" />\r\n        <Field\r\n          name=\"description\"\r\n          component={this.renderInput}\r\n          label=\"Description\"\r\n        />\r\n        <button className=\"ui button primary\">Submit</button>\r\n  \r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst validate=(formValues)=>{\r\n\r\n  const errors={};\r\n\r\n  if(!formValues.title){\r\n\r\n    errors.title=\"You must enter a valid title\";\r\n  }\r\n  if(!formValues.description){\r\n\r\n    errors.description=\"You must enter a valid description\";\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"streamCreate\",\r\n  validate: validate\r\n})(StreamCreate);\r\n"]},"metadata":{},"sourceType":"module"}